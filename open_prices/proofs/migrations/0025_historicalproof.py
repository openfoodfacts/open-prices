# Generated by Django 5.1.7 on 2025-10-09 10:29

from decimal import Decimal

import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import simple_history.models
from django.core import management
from django.db import migrations, models


def populate_history(apps, schema_editor):
    management.call_command("populate_history", "proofs.Proof", "--batchsize", "1000")


class Migration(migrations.Migration):
    dependencies = [
        ("locations", "0008_alter_location_count_default_0"),
        ("proofs", "0024_alter_proof_count_default_0"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalProof",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("file_path", models.CharField(blank=True, null=True)),
                ("mimetype", models.CharField(blank=True, null=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("PRICE_TAG", "PRICE_TAG"),
                            ("RECEIPT", "RECEIPT"),
                            ("GDPR_REQUEST", "GDPR_REQUEST"),
                            ("SHOP_IMPORT", "SHOP_IMPORT"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "image_md5_hash",
                    models.CharField(
                        blank=True, db_index=True, max_length=32, null=True
                    ),
                ),
                ("image_thumb_path", models.CharField(blank=True, null=True)),
                (
                    "location_osm_id",
                    models.PositiveBigIntegerField(blank=True, null=True),
                ),
                (
                    "location_osm_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("NODE", "NODE"),
                            ("WAY", "WAY"),
                            ("RELATION", "RELATION"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("date", models.DateField(blank=True, null=True)),
                (
                    "currency",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ADP", "ADP"),
                            ("AED", "AED"),
                            ("AFA", "AFA"),
                            ("AFN", "AFN"),
                            ("ALK", "ALK"),
                            ("ALL", "ALL"),
                            ("AMD", "AMD"),
                            ("ANG", "ANG"),
                            ("AOA", "AOA"),
                            ("AOK", "AOK"),
                            ("AON", "AON"),
                            ("AOR", "AOR"),
                            ("ARA", "ARA"),
                            ("ARL", "ARL"),
                            ("ARM", "ARM"),
                            ("ARP", "ARP"),
                            ("ARS", "ARS"),
                            ("ATS", "ATS"),
                            ("AUD", "AUD"),
                            ("AWG", "AWG"),
                            ("AZM", "AZM"),
                            ("AZN", "AZN"),
                            ("BAD", "BAD"),
                            ("BAM", "BAM"),
                            ("BAN", "BAN"),
                            ("BBD", "BBD"),
                            ("BDT", "BDT"),
                            ("BEC", "BEC"),
                            ("BEF", "BEF"),
                            ("BEL", "BEL"),
                            ("BGL", "BGL"),
                            ("BGM", "BGM"),
                            ("BGN", "BGN"),
                            ("BGO", "BGO"),
                            ("BHD", "BHD"),
                            ("BIF", "BIF"),
                            ("BMD", "BMD"),
                            ("BND", "BND"),
                            ("BOB", "BOB"),
                            ("BOL", "BOL"),
                            ("BOP", "BOP"),
                            ("BOV", "BOV"),
                            ("BRB", "BRB"),
                            ("BRC", "BRC"),
                            ("BRE", "BRE"),
                            ("BRL", "BRL"),
                            ("BRN", "BRN"),
                            ("BRR", "BRR"),
                            ("BRZ", "BRZ"),
                            ("BSD", "BSD"),
                            ("BTN", "BTN"),
                            ("BUK", "BUK"),
                            ("BWP", "BWP"),
                            ("BYB", "BYB"),
                            ("BYN", "BYN"),
                            ("BYR", "BYR"),
                            ("BZD", "BZD"),
                            ("CAD", "CAD"),
                            ("CDF", "CDF"),
                            ("CHE", "CHE"),
                            ("CHF", "CHF"),
                            ("CHW", "CHW"),
                            ("CLE", "CLE"),
                            ("CLF", "CLF"),
                            ("CLP", "CLP"),
                            ("CNH", "CNH"),
                            ("CNX", "CNX"),
                            ("CNY", "CNY"),
                            ("COP", "COP"),
                            ("COU", "COU"),
                            ("CRC", "CRC"),
                            ("CSD", "CSD"),
                            ("CSK", "CSK"),
                            ("CUC", "CUC"),
                            ("CUP", "CUP"),
                            ("CVE", "CVE"),
                            ("CYP", "CYP"),
                            ("CZK", "CZK"),
                            ("DDM", "DDM"),
                            ("DEM", "DEM"),
                            ("DJF", "DJF"),
                            ("DKK", "DKK"),
                            ("DOP", "DOP"),
                            ("DZD", "DZD"),
                            ("ECS", "ECS"),
                            ("ECV", "ECV"),
                            ("EEK", "EEK"),
                            ("EGP", "EGP"),
                            ("ERN", "ERN"),
                            ("ESA", "ESA"),
                            ("ESB", "ESB"),
                            ("ESP", "ESP"),
                            ("ETB", "ETB"),
                            ("EUR", "EUR"),
                            ("FIM", "FIM"),
                            ("FJD", "FJD"),
                            ("FKP", "FKP"),
                            ("FRF", "FRF"),
                            ("GBP", "GBP"),
                            ("GEK", "GEK"),
                            ("GEL", "GEL"),
                            ("GHC", "GHC"),
                            ("GHS", "GHS"),
                            ("GIP", "GIP"),
                            ("GMD", "GMD"),
                            ("GNF", "GNF"),
                            ("GNS", "GNS"),
                            ("GQE", "GQE"),
                            ("GRD", "GRD"),
                            ("GTQ", "GTQ"),
                            ("GWE", "GWE"),
                            ("GWP", "GWP"),
                            ("GYD", "GYD"),
                            ("HKD", "HKD"),
                            ("HNL", "HNL"),
                            ("HRD", "HRD"),
                            ("HRK", "HRK"),
                            ("HTG", "HTG"),
                            ("HUF", "HUF"),
                            ("IDR", "IDR"),
                            ("IEP", "IEP"),
                            ("ILP", "ILP"),
                            ("ILR", "ILR"),
                            ("ILS", "ILS"),
                            ("INR", "INR"),
                            ("IQD", "IQD"),
                            ("IRR", "IRR"),
                            ("ISJ", "ISJ"),
                            ("ISK", "ISK"),
                            ("ITL", "ITL"),
                            ("JMD", "JMD"),
                            ("JOD", "JOD"),
                            ("JPY", "JPY"),
                            ("KES", "KES"),
                            ("KGS", "KGS"),
                            ("KHR", "KHR"),
                            ("KMF", "KMF"),
                            ("KPW", "KPW"),
                            ("KRH", "KRH"),
                            ("KRO", "KRO"),
                            ("KRW", "KRW"),
                            ("KWD", "KWD"),
                            ("KYD", "KYD"),
                            ("KZT", "KZT"),
                            ("LAK", "LAK"),
                            ("LBP", "LBP"),
                            ("LKR", "LKR"),
                            ("LRD", "LRD"),
                            ("LSL", "LSL"),
                            ("LTL", "LTL"),
                            ("LTT", "LTT"),
                            ("LUC", "LUC"),
                            ("LUF", "LUF"),
                            ("LUL", "LUL"),
                            ("LVL", "LVL"),
                            ("LVR", "LVR"),
                            ("LYD", "LYD"),
                            ("MAD", "MAD"),
                            ("MAF", "MAF"),
                            ("MCF", "MCF"),
                            ("MDC", "MDC"),
                            ("MDL", "MDL"),
                            ("MGA", "MGA"),
                            ("MGF", "MGF"),
                            ("MKD", "MKD"),
                            ("MKN", "MKN"),
                            ("MLF", "MLF"),
                            ("MMK", "MMK"),
                            ("MNT", "MNT"),
                            ("MOP", "MOP"),
                            ("MRO", "MRO"),
                            ("MRU", "MRU"),
                            ("MTL", "MTL"),
                            ("MTP", "MTP"),
                            ("MUR", "MUR"),
                            ("MVP", "MVP"),
                            ("MVR", "MVR"),
                            ("MWK", "MWK"),
                            ("MXN", "MXN"),
                            ("MXP", "MXP"),
                            ("MXV", "MXV"),
                            ("MYR", "MYR"),
                            ("MZE", "MZE"),
                            ("MZM", "MZM"),
                            ("MZN", "MZN"),
                            ("NAD", "NAD"),
                            ("NGN", "NGN"),
                            ("NIC", "NIC"),
                            ("NIO", "NIO"),
                            ("NLG", "NLG"),
                            ("NOK", "NOK"),
                            ("NPR", "NPR"),
                            ("NZD", "NZD"),
                            ("OMR", "OMR"),
                            ("PAB", "PAB"),
                            ("PEI", "PEI"),
                            ("PEN", "PEN"),
                            ("PES", "PES"),
                            ("PGK", "PGK"),
                            ("PHP", "PHP"),
                            ("PKR", "PKR"),
                            ("PLN", "PLN"),
                            ("PLZ", "PLZ"),
                            ("PTE", "PTE"),
                            ("PYG", "PYG"),
                            ("QAR", "QAR"),
                            ("RHD", "RHD"),
                            ("ROL", "ROL"),
                            ("RON", "RON"),
                            ("RSD", "RSD"),
                            ("RUB", "RUB"),
                            ("RUR", "RUR"),
                            ("RWF", "RWF"),
                            ("SAR", "SAR"),
                            ("SBD", "SBD"),
                            ("SCR", "SCR"),
                            ("SDD", "SDD"),
                            ("SDG", "SDG"),
                            ("SDP", "SDP"),
                            ("SEK", "SEK"),
                            ("SGD", "SGD"),
                            ("SHP", "SHP"),
                            ("SIT", "SIT"),
                            ("SKK", "SKK"),
                            ("SLE", "SLE"),
                            ("SLL", "SLL"),
                            ("SOS", "SOS"),
                            ("SRD", "SRD"),
                            ("SRG", "SRG"),
                            ("SSP", "SSP"),
                            ("STD", "STD"),
                            ("STN", "STN"),
                            ("SUR", "SUR"),
                            ("SVC", "SVC"),
                            ("SYP", "SYP"),
                            ("SZL", "SZL"),
                            ("THB", "THB"),
                            ("TJR", "TJR"),
                            ("TJS", "TJS"),
                            ("TMM", "TMM"),
                            ("TMT", "TMT"),
                            ("TND", "TND"),
                            ("TOP", "TOP"),
                            ("TPE", "TPE"),
                            ("TRL", "TRL"),
                            ("TRY", "TRY"),
                            ("TTD", "TTD"),
                            ("TWD", "TWD"),
                            ("TZS", "TZS"),
                            ("UAH", "UAH"),
                            ("UAK", "UAK"),
                            ("UGS", "UGS"),
                            ("UGX", "UGX"),
                            ("USD", "USD"),
                            ("USN", "USN"),
                            ("USS", "USS"),
                            ("UYI", "UYI"),
                            ("UYP", "UYP"),
                            ("UYU", "UYU"),
                            ("UYW", "UYW"),
                            ("UZS", "UZS"),
                            ("VEB", "VEB"),
                            ("VED", "VED"),
                            ("VEF", "VEF"),
                            ("VES", "VES"),
                            ("VND", "VND"),
                            ("VNN", "VNN"),
                            ("VUV", "VUV"),
                            ("WST", "WST"),
                            ("XAF", "XAF"),
                            ("XAG", "XAG"),
                            ("XAU", "XAU"),
                            ("XBA", "XBA"),
                            ("XBB", "XBB"),
                            ("XBC", "XBC"),
                            ("XBD", "XBD"),
                            ("XCD", "XCD"),
                            ("XDR", "XDR"),
                            ("XEU", "XEU"),
                            ("XFO", "XFO"),
                            ("XFU", "XFU"),
                            ("XOF", "XOF"),
                            ("XPD", "XPD"),
                            ("XPF", "XPF"),
                            ("XPT", "XPT"),
                            ("XRE", "XRE"),
                            ("XSU", "XSU"),
                            ("XTS", "XTS"),
                            ("XUA", "XUA"),
                            ("XXX", "XXX"),
                            ("YDD", "YDD"),
                            ("YER", "YER"),
                            ("YUD", "YUD"),
                            ("YUM", "YUM"),
                            ("YUN", "YUN"),
                            ("YUR", "YUR"),
                            ("ZAL", "ZAL"),
                            ("ZAR", "ZAR"),
                            ("ZMK", "ZMK"),
                            ("ZMW", "ZMW"),
                            ("ZRN", "ZRN"),
                            ("ZRZ", "ZRZ"),
                            ("ZWD", "ZWD"),
                            ("ZWL", "ZWL"),
                            ("ZWR", "ZWR"),
                        ],
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "receipt_price_count",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Receipt's number of prices (user input)",
                    ),
                ),
                (
                    "receipt_price_total",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                        verbose_name="Receipt's total amount (user input)",
                    ),
                ),
                (
                    "receipt_online_delivery_costs",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                        verbose_name="Receipt's online delivery costs (user input)",
                    ),
                ),
                ("ready_for_price_tag_validation", models.BooleanField(default=False)),
                ("owner_consumption", models.BooleanField(blank=True, null=True)),
                ("owner_comment", models.TextField(blank=True, null=True)),
                ("price_count", models.PositiveIntegerField(default=0)),
                ("prediction_count", models.PositiveIntegerField(default=0)),
                ("owner", models.CharField(blank=True, null=True)),
                ("source", models.CharField(blank=True, null=True)),
                (
                    "tags",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                ("created", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                ("history_user_id", models.CharField(null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="locations.location",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Proof",
                "verbose_name_plural": "historical Proofs",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.RunPython(populate_history),
    ]
